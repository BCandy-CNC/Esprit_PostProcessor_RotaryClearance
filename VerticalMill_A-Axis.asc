
##=====================================================================================
##							    SYSTEM VARIABLES
##=====================================================================================
PostName             : Mill4xWrap.ASC
MachineTolerance     : 0.00001
MaxCircleRadius      : 9999
MaxNCode             : 9999
NCodeDefault         : 100
NCodeIncrement       : 10
Post_Passes			 : 2
ProgramNumberDefault : 1000
RemoveSpaces         : 0
RuntimeComments      : 0
StepTolerance        : 0.0001
StringCharacter      : "
UpperCaseComments    : 1

##=====================================================================================
##							       MACHINE MODES
##=====================================================================================
CoordinateMode       : Absolute
CircleMode           : By360
CenterMode           : IncrementFromStart
MeasurementMode      : Metric
RotaryMode           : Full
RotaryStartMode      : AllMillCycles

##=====================================================================================
##							       FORMATTABLE CODES
##=====================================================================================
SequenceNumber       : N     Y 4 N N 0     Y 4 N N 0     0     - - - -
ProgramNumber        : O     Y 4 N N 0     Y 4 N N 0     0     - - - -
XAbsolute            : X     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
YAbsolute            : Y     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
ZAbsolute            : Z     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
AAxis                : A     N 3 Y N 3     N 3 Y N 3     1     1 N 0 0
XCenterAbsolute      : I     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
YCenterAbsolute      : J     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
ZCenterAbsolute      : K     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
WorkingDiameter      : A_    N 3 Y N 4     N 4 Y N 3     0     - - - -
DiameterCompensation : D     Y 2 N N 0     Y 2 N N 0     0     - - - -
FeedRate             : F     N 3 Y N 2     N 5 N N 0     0     - - - -
ChipFeedRate         : F_    N 3 Y N 5     N 4 Y N 4     0     - - - -
DwellTime            : G04_X N 5 N N 0     N 5 N N 0     0     - - - -
LengthCompensation   : H     Y 2 N N 0     Y 2 N N 0     0     - - - -
Peck                 : Q     N 4 Y N 4     N 5 Y N 3     0     - - - -
RPlane               : R     N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
CircleRadius         : R_    N 4 Y N 4     N 5 Y N 3     1     - - - -
SpindleSpeed         : S     N 4 N N 0     N 4 N N 0     0     - - - -
ToolNumber           : T     N 2 N N 0     N 2 N N 0     0     - - - -
MiscFormat1          : X_    N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
MiscFormat2          : Y_    N 4 Y N 4     N 5 Y N 3     1     1 N 0 0
MiscFormat3          : Z_    N 4 Y N 4     N 5 Y N 3     1     1 N 0 0

##=====================================================================================
##							        SYMBOLIC CODES
##=====================================================================================
MotionRapid          : G00
MotionLinear         : G01
MotionCW             : G02
MotionCCW            : G03
UserPlane            : G16
XYPlane              : G17
ZXPlane              : G18
YZPlane              : G19
Inch                 : G20
Metric               : G21
ZeroReturn           : G28
CompensationOff      : G40
CompensationLeft     : G41
CompensationRight    : G42
CompensationPlus     : G43
LengthCancel         : G49
CoordinatePreset     : G53
WorkSystem1          : G54
WorkSystem2          : G55
WorkSystem3          : G56
WorkSystem4          : G57
WorkSystem5          : G58
WorkSystem6          : G59
Peck2                : G73
Bore3                : G76
Bore2                : G77
Cancel               : G80
Drill1               : G81
Drill2               : G82
Peck1                : G83
Tap1                 : G84
Bore1                : G85
Bore6                : G86
Bore7                : G87
Bore4                : G88
Bore5                : G89
Absolute             : G90
Incremental          : G91
ParkReturnXYZ        : G91_X0_Y0_Z0_A0
ParkReturnZ          : G91_Z0_A0
ParkReturnXZ         : G91_X0_Z0_A0
ParkReturnYZ         : G91_Y0_Z0_A0
SetOrigin            : G92
IReturn              : G98
RReturn              : G99
SideInterpolateOn    : G107
FaceInterpolateOn    : G112
SideInterpolateOff   : G113
FaceInterpolateOff   : G113_
Tap2                 : G184 ## rigid tapping
ProgramStop          : M00
OptionalStop         : M01
EndProgram           : M02
SpindleCW            : M03
SpindleCCW           : M04
SpindleOff           : M05
ToolChange           : M06
CoolantFlood         : M08
CoolantOn            : M08_
CoolantOff           : M09
RewindStop           : M30
PercentSign          : %

##=====================================================================================
##							          VARIABLES
##=====================================================================================
## Used for the output of work coordinate clearance parameters 
Variable			 : WCClearance(0..99) WCCaption(0..99) WCCounter WCCounter2 IsWCInArray

##=====================================================================================
##							         SUB ROUTINES
##=====================================================================================
## Exits the calling example if post_pass value is 1
Define HandlePost_Passes
					 : If (Post_Pass=1) 
					 :		ExitExample 
					 : EndIf
EndDefine

## Captures work coordinate captions and rotary clearance values
Define CaptureWCClearances
					 : IsWCInArray=(0)
					 : WCCounter2=(0)
					 : While (WCCounter2<UBound(WCCaption))
					 :		If (WCCaption(WCCounter2)=clstring(754))
					 :			IsWCInArray=(1)
					 : 		EndIf
					 : 		WCCounter2=(WCCounter2 + 1)
					 : EndWhile
					 : If (IsWCInArray=0)
					 :		WCClearance(WCCounter)=(nextclfile(687))
					 : 		WCCaption(WCCounter)=(clstring(754))
					 : 		WCCounter=(WCCounter + 1)
					 : EndIf
EndDefine

## Outputs rotary clearance values as comments
Define OuputWCClearances
					 : WCCounter=(0)
					 : BlankLine
					 : OutputString("(-- ROTARY CLEARANCE VALUES --)")
					 : While (WCCounter<UBound(WCCaption))
					 :		If (WCCaption(WCCounter)<>"0")
					 :			If(WCClearance(WCCounter)<=0)
					 :				OutputString("(***" + WCCaption(WCCounter) + " IS " + WCClearance(WCCounter) + "***)")
					 :			Else
					 :				OutputString(\\
					 								"(" + gpchr(32) + gpchr(32) + gpchr(32) + \\
					 								WCCaption(WCCounter) + " IS " + WCClearance(WCCounter) + \\
													gpchr(32) + gpchr(32) + gpchr(32) + ")\\
												")
					 :			EndIf
					 :		EndIf
					 :		WCCounter=(WCCounter + 1)
					 : EndWhile
					 : BlankLine
EndDefine

##=====================================================================================
##							        EXAMPLES SECTION
##=====================================================================================
ex_MainStart           $HandlePost_Passes
					 : O*
                     : TimeStamp
					   $OuputWCClearances

ex_SetOrigin           $HandlePost_Passes
					 : SetOriginComment
                     : N CoordinateCode* MeasurementCode*
                     : N G92* X_*(XStart) Y_*(YStart) Z_*(ZStart)

ex_FirstToolChange     $HandlePost_Passes
					 : ToolChangeComment
                     : N T* M06*

ex_OtherToolChange     $HandlePost_Passes
					 : ToolChangeComment
                     : N T* M06*

ex_LastToolChange      $HandlePost_Passes
					 : ToolChangeComment
                     : N T* M06*

ex_ToolCancel          $HandlePost_Passes
					 : N G00* G28* G40* G49* G80* M05* M09*

ex_CycleStart          $HandlePost_Passes
					 : Comment

ex_RotaryStart         $HandlePost_Passes
					 : N WorkSystemCode* S* SpindleDirection*
                     : N G00* X*  Y*  A*
                     : N G43* Z*  H*  CoolantCode*

ex_Compensation        $HandlePost_Passes
					 : N G01  CompensationSide  X  Y  Z  A  D*  F

ex_CompensationOff     $HandlePost_Passes
					 : N G01  G40  X  Y  Z  A  F

ex_CompOff_R           $HandlePost_Passes
					 : N G00  G40  X  Y  Z  A  

ex_Rapid               $HandlePost_Passes
					 : N G00  X  Y  Z  A  

ex_Linear              $HandlePost_Passes
					 : N G01  X  Y  Z  A  F

ex_Circle              $HandlePost_Passes
					 : N WorkPlaneCode  CircleDirection  X* Y* Z  I* J* F

ex_CircleZX            $HandlePost_Passes
					 : N WorkPlaneCode  CircleDirection  X* Y  Z* I* K* F

ex_CircleYZ            $HandlePost_Passes
					 : N WorkPlaneCode  CircleDirection  X* Y* Z  J* K* F

ex_FaceOn              $HandlePost_Passes
					 : N G112*

ex_FaceOff             $HandlePost_Passes
					 : N G113_*

ex_SideOn              $HandlePost_Passes
					 : N G107* A_*

ex_SideOff             $HandlePost_Passes
					 : N G113*
					 
ex_StartPoint		 : If(Post_Pass=1) 
							$CaptureWCClearances 
					 : EndIf
					   $HandlePost_Passes

ex_FaceSeg             $HandlePost_Passes
					 : N G17*  G01*  X*  Z   A*  F

ex_FaceArc             $HandlePost_Passes
					 : N G17*  CircleDirection*  X*  Z   A*  R_* F

ex_SideArc             $HandlePost_Passes
					 : N G16*  CircleDirection*  X   Z*  A*  R_* F

ex_Park                $HandlePost_Passes
					 : N G00* G28* ParkReturnCode*

ex_TechnologyChange    $HandlePost_Passes
					 : Comment
                     : N ProgramMode
                     : N F  S 
                     : N G04_X

ex_DrillStart          $HandlePost_Passes
					 : N DrillCycleCode* ReturnPlaneCode*  X* Y* Z* A* R* F*
ex_DrillBody           $HandlePost_Passes
					 : N DrillCycleCode  ReturnPlaneCode   X  Y  Z  A  R  F

ex_PeckStart           $HandlePost_Passes
					 : N PeckCycleCode*  ReturnPlaneCode*  X  Y  Z* A* R* F* Q*
ex_PeckBody            $HandlePost_Passes
					 : N PeckCycleCode   ReturnPlaneCode   X  Y  Z  A  R  F  Q

ex_TapStart            $HandlePost_Passes
					 : N TapCycleCode*   ReturnPlaneCode*  X  Y  Z* A* R* F_*
ex_TapBody             $HandlePost_Passes
					 : N TapCycleCode    ReturnPlaneCode   X  Y  Z  A  R  F_

ex_BoreStart           $HandlePost_Passes
					 : N BoreCycleCode*  ReturnPlaneCode*  X  Y  Z* A* R* F*
ex_BoreBody            $HandlePost_Passes
					 : N BoreCycleCode   ReturnPlaneCode   X  Y  Z  A  R  F

ex_MainEnd             $HandlePost_Passes
					 : N G00* G28* G40* G49* G80* M05* M09*
                     : N G28* G91_X0_Y0_Z0_A0*
                     : N M02*

ex_EndCode             $HandlePost_Passes
					 : %